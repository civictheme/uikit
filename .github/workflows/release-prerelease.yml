name: Publish Pre-release

on:
  workflow_dispatch:
    inputs:
      target-version:
        description: 'Target version being developed (e.g. 1.11.0)'
        required: true
        default: '1.11.0'
      prerelease-type:
        description: 'Pre-release type (rc or beta)'
        required: true
        default: 'rc'
        type: choice
        options:
          - 'rc'
          - 'beta'
      prerelease-number:
        description: 'Pre-release number (e.g. 0, 1, 2)'
        required: true
        default: '0'

permissions:
  contents: write

jobs:
  publish-prerelease:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GHA_BOT_PAT }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm install --workspaces && npm install && npx playwright install

      - name: Check code style
        run: npm run lint

      - name: Run tests
        run: npm run test:ci

      - name: Verify package contents
        run: |
          # Expected directories
          EXPECTED_SDC="dist components assets"
          EXPECTED_TWIG="dist components assets"

          failed=0
          for pkg in sdc twig; do
            echo "=== Verifying @civictheme/$pkg package contents ==="
            npm pack --workspace=packages/$pkg --quiet
            tarball=$(ls -t civictheme-$pkg-*.tgz | head -1)

            # Get expected dirs for this package
            expected_var="EXPECTED_${pkg^^}"
            expected_dirs="${!expected_var}"

            # Check each directory
            missing_dirs=""
            for dir in $expected_dirs; do
              if tar -tzf "$tarball" | grep -q "^package/${dir}/"; then
                echo "✅ $dir"
              else
                echo "❌ $dir (MISSING)"
                missing_dirs="$missing_dirs $dir"
                failed=1
              fi
            done

            rm -f "$tarball"

            if [ -n "$missing_dirs" ]; then
              echo "❌ Package $pkg is missing required directories:$missing_dirs"
            else
              echo "✅ Package $pkg contains all required directories"
            fi
            echo ""
          done

          if [ $failed -eq 1 ]; then
            echo "❌ Package verification failed!"
            exit 1
          fi

      - name: Set pre-release version
        run: |
          # Create pre-release version based on target version
          TARGET_VERSION="${{ github.event.inputs.target-version }}"
          PRERELEASE_TYPE="${{ github.event.inputs.prerelease-type }}"
          PRERELEASE_NUMBER="${{ github.event.inputs.prerelease-number }}"
          PRERELEASE_VERSION="${TARGET_VERSION}-${PRERELEASE_TYPE}.${PRERELEASE_NUMBER}"
          echo "PRERELEASE_VERSION=${PRERELEASE_VERSION}" >> ${GITHUB_ENV}
          echo "RELEASE_TAG=${PRERELEASE_TYPE}" >> ${GITHUB_ENV}

          # Update versions in all packages
          npm version ${PRERELEASE_VERSION} --no-git-tag-version --allow-same-version
          npm version ${PRERELEASE_VERSION} --no-git-tag-version --allow-same-version --workspace=packages/sdc
          npm version ${PRERELEASE_VERSION} --no-git-tag-version --allow-same-version --workspace=packages/twig

      - name: Publish @civictheme/sdc package
        working-directory: packages/sdc
        run: npm publish --verbose --access public --tag dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_BOT_PAT }}

      - name: Publish @civictheme/twig package
        working-directory: packages/twig
        run: npm publish --verbose --access public --tag dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_BOT_PAT }}

      - name: Report pre-release publish
        run: |
          echo "✅ Published pre-release packages:"
          echo "  - @civictheme/sdc@${PRERELEASE_VERSION} (tag: ${{ env.RELEASE_TAG }})"
          echo "  - @civictheme/twig@${PRERELEASE_VERSION} (tag: ${{ env.RELEASE_TAG }})"
          echo ""
          echo "These packages can be installed with:"
          echo "npm install @civictheme/sdc@${{ env.RELEASE_TAG }}"
          echo "npm install @civictheme/twig@${{ env.RELEASE_TAG }}"
