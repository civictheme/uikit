name: Visual Regression Testing

on:
  pull_request:
    branches:
      - main
      - 'feature/**'

jobs:
  visual-regression:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for comparing with main branch

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install && npx playwright install

      - name: Build Storybook
        run: npm run build

      - name: Run visual regression tests
        run: |
          # Capture screenshots for the main branch components
          npm run diff:command -- capture --source main --target components --force
          
          # Capture screenshots for the current branch components
          npm run diff:command -- capture --source current --target components --force
          
          # Capture screenshots for the current branch SDC components
          npm run diff:command -- capture --source current --target components-sdc --force
          
          # List the available screenshot sets
          npm run diff:command -- list --sets
          
          # Compare main vs current branch components
          SOURCE_NAME=$(npm run diff:command -- list --sets | grep "set--main--twig" | awk '{print $2}')
          TARGET_NAME=$(npm run diff:command -- list --sets | grep "set--current--" | grep "twig" | awk '{print $2}')
          npm run diff:command -- compare --source "$SOURCE_NAME" --target "$TARGET_NAME" --force
          
          # Compare main vs current branch SDC components
          SOURCE_SDC_NAME=$(npm run diff:command -- list --sets | grep "set--current--" | grep "twig" | awk '{print $2}')
          TARGET_SDC_NAME=$(npm run diff:command -- list --sets | grep "set--current--" | grep "sdc" | awk '{print $2}')
          npm run diff:command -- compare --source "$SOURCE_SDC_NAME" --target "$TARGET_SDC_NAME" --force

      - name: Upload visual regression reports as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-reports
          path: |
            visual-diff/screenshots/diff--*
            visual-diff/config/config.json
          if-no-files-found: warn

      - name: Comment on PR with visual regression results
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const configPath = 'visual-diff/config/config.json';
              if (!fs.existsSync(configPath)) {
                console.log('No visual regression config found');
                return;
              }
              
              const config = JSON.parse(fs.readFileSync(configPath, 'utf8'));
              const comparisons = config.comparisons || {};
              
              if (Object.keys(comparisons).length === 0) {
                console.log('No visual regression comparisons found');
                return;
              }
              
              let commentBody = '## Visual Regression Test Results\n\n';
              let hasChanges = false;
              
              for (const [name, comparison] of Object.entries(comparisons)) {
                try {
                  const reportPath = path.join(comparison.reportDirectory, 'reg.json');
                  if (fs.existsSync(reportPath)) {
                    const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
                    const newImages = report.newItems || [];
                    const deletedImages = report.deletedItems || [];
                    const changedImages = report.failedItems || [];
                    
                    if (newImages.length > 0 || deletedImages.length > 0 || changedImages.length > 0) {
                      hasChanges = true;
                      commentBody += `### ${name}\n\n`;
                      commentBody += `- **Source**: ${comparison.source}\n`;
                      commentBody += `- **Target**: ${comparison.target}\n`;
                      commentBody += `- **New Images**: ${newImages.length}\n`;
                      commentBody += `- **Deleted Images**: ${deletedImages.length}\n`;
                      commentBody += `- **Changed Images**: ${changedImages.length}\n\n`;
                      
                      if (changedImages.length > 0) {
                        commentBody += 'Changed components:\n';
                        changedImages.slice(0, 10).forEach(item => {
                          commentBody += `- ${item.replace(/\.[^/.]+$/, '')}\n`;
                        });
                        
                        if (changedImages.length > 10) {
                          commentBody += `- ... and ${changedImages.length - 10} more\n`;
                        }
                        commentBody += '\n';
                      }
                    }
                  }
                } catch (err) {
                  console.error(`Error processing comparison ${name}:`, err);
                }
              }
              
              if (hasChanges) {
                commentBody += '⚠️ Visual changes detected! Please review the artifacts for details.\n';
                commentBody += 'Download the artifacts from the Actions tab to view the full visual regression report.\n';
              } else {
                commentBody += '✅ No visual changes detected between components.';
              }
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            } catch (error) {
              console.error('Error generating PR comment:', error);
            }
