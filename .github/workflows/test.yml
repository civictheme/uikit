name: Test
permissions:
  contents: read
  pull-requests: write
  deployments: write
  statuses: write

on:
  pull_request:
    branches:
      - main
      - 'feature/**'
      - 'project/**'
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          tools: composer:v2
          coverage: none

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install NPM dependencies
        run: npm ci --workspaces && npm ci

      - name: Install PHP dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --no-progress

      - name: Check coding standards
        run: npm run lint

      - name: Check Twig coding standards
        run: composer lint

      - name: Build
        run: npm run build

      - name: Check components are up to date
        run: npm run components:check

      - name: Check snapshots
        run: npm run diff:snapshot

      - name: Run tests
        run: npm run test:ci

      - name: Upload twig coverage report as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.job}}-twig-code-coverage-report-${{ matrix.node-version }}
          path: ./packages/twig/.logs/coverage
          if-no-files-found: error

      - name: Upload sdc coverage report as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.job}}-sdc-code-coverage-report-${{ matrix.node-version }}
          path: ./packages/sdc/.logs/coverage
          if-no-files-found: error

      - name: Upload twig coverage report to Codecov
        uses: codecov/codecov-action@v5
        if: ${{ env.CODECOV_TOKEN != '' }}
        with:
          files: ./packages/twig/.logs/coverage/clover.xml
          flags: twig
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload sdc coverage report to Codecov
        uses: codecov/codecov-action@v5
        if: ${{ env.CODECOV_TOKEN != '' }}
        with:
          files: ./packages/sdc/.logs/coverage/clover.xml
          flags: sdc
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Deploy Twig Components to Netlify
        id: netlify-twig
        if: matrix.node-version == 22
        uses: 'nwtgck/actions-netlify@4cbaf4c08f1a7bfa537d6113472ef4424e4eb654'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          publish-dir: './packages/twig/storybook-static'
          production-branch: main
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: false
          overwrites-pull-request-comment: true
          alias: 'twig'
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        timeout-minutes: 1
      - name: Deploy SDC Components Storybook to Netlify
        id: netlify-sdc
        if: matrix.node-version == 22
        uses: 'nwtgck/actions-netlify@4cbaf4c08f1a7bfa537d6113472ef4424e4eb654'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          publish-dir: './packages/sdc/storybook-static'
          production-branch: main
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: false
          overwrites-pull-request-comment: true
          alias: 'sdc'
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        timeout-minutes: 1
      - name: Find ID of existing deployment message
        uses: 'peter-evans/find-comment@14614d7a55fa5b53e634f9e6c068317a3f7b6ab1'
        id: netlify-deploy-message
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'CivicTheme UI Kit Deployments'
      - name: Create or update deployment message
        uses: 'peter-evans/create-or-update-comment@ba1ae221c645fe0d115fac03760f1650a6ea5477'
        with:
          comment-id: ${{ steps.netlify-deploy-message.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ðŸŽ¨ CivicTheme UI Kit Deployments:
            - ðŸ“¦ [twig](${{ steps.netlify-twig.outputs.deploy-url }})
            - :ðŸ“¦ [sdc](${{ steps.netlify-sdc.outputs.deploy-url }})
          edit-mode: replace
