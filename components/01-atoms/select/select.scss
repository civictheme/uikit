//
// Select component.
//

.ct-select {
  $root: &;

  @include ct-typography('text-regular');

  appearance: none;
  border-radius: $ct-border-radius;
  border-width: $ct-select-border-width;
  min-width: $ct-select-min-width;
  height: $ct-select-height;
  padding-top: $ct-select-padding-vertical;
  padding-bottom: $ct-select-padding-vertical;
  padding-left: $ct-select-padding-horizontal;
  padding-right: $ct-select-padding-horizontal + $ct-select-width;

  // Visually move icon off the edge by the width of the border.
  background-position: calc(100% - $ct-select-border-width);
  background-repeat: no-repeat;
  background-size: $ct-select-width $ct-select-icon-height;

  &[disabled] {
    pointer-events: none;
    opacity: 50%;
  }

  &[multiple] {
    height: inherit;
    padding-left: $ct-select-padding-horizontal;
    padding-right: $ct-select-padding-horizontal;
    padding-top: $ct-select-padding-vertical * 2;
    padding-bottom: $ct-select-padding-vertical * 2;

    optgroup,
    option {
      margin-top: ct-spacing();

      &:first-child {
        margin-top: 0;
      }
    }

    optgroup {
      font-weight: bold;

      option {
        &:first-child {
          margin-top: ct-spacing();
        }
      }
    }
  }

  &:-moz-focusring {
    color: transparent;
  }

  &:-webkit-scrollbar {
    background-color: transparent;
  }

  &.ct-theme-light {
    background-color: $ct-select-light-background-color;
    border-color: $ct-input-light-border-color;
    color: $ct-select-light-color;
    background-image: $ct-select-light-icon;

    &:hover {
      // Here and below, we are using the box shadow in addition to the border
      // to avoid the element from moving when the border is added.
      border-color: $ct-select-light-hover-border-color;
      box-shadow: 0 0 0 ct-particle(0.125) $ct-select-light-hover-border-color;
    }

    &:focus-visible {
      border-color: $ct-select-light-focus-border-color;
      box-shadow: 0 0 0 ct-particle(0.125) $ct-select-light-focus-border-color;
      outline: none;
    }

    &.error,
    &.ct-input--error {
      border-color: $ct-select-light-error-border-color;
      box-shadow: 0 0 0 ct-particle(0.125) $ct-select-light-error-border-color;
    }

    option {
      &:checked {
        background-color: $ct-select-light-option-background-color;
        color: inherit;
      }
    }

    &[multiple] {
      background: none;
    }
  }

  &.ct-theme-dark {
    background-color: $ct-select-dark-background-color;
    border-color: $ct-input-dark-border-color;
    color: $ct-select-dark-color;
    background-image: $ct-select-dark-icon;

    &:hover {
      border-color: $ct-select-dark-hover-border-color;
      box-shadow: 0 0 0 ct-particle(0.125) $ct-select-dark-hover-border-color;
    }

    &:focus-visible {
      border-color: $ct-select-dark-focus-border-color;
      box-shadow: 0 0 0 ct-particle(0.125) $ct-select-dark-focus-border-color;
      outline: none;
    }

    &.error,
    &.ct-input--error {
      border-color: $ct-select-dark-error-border-color;
      box-shadow: 0 0 0 ct-particle(0.125) $ct-select-dark-error-border-color;
    }

    option {
      &:checked {
        background-color: $ct-select-dark-option-background-color;
        color: inherit;
      }
    }

    &[multiple] {
      background: none;
    }
  }
}
